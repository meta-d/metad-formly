export const MAX_FOLDING_REGIONS=65535;export const MAX_LINE_NUMBER=16777215;const MASK_INDENT=4278190080;export class FoldingRegions{constructor(startIndexes,endIndexes,types){if(startIndexes.length!==endIndexes.length||startIndexes.length>65535)throw new Error("invalid startIndexes or endIndexes size");this._startIndexes=startIndexes,this._endIndexes=endIndexes,this._collapseStates=new Uint32Array(Math.ceil(startIndexes.length/32)),this._types=types,this._parentsComputed=!1}ensureParentIndices(){if(!this._parentsComputed){this._parentsComputed=!0;let parentIndexes=[],isInsideLast=(startLineNumber,endLineNumber)=>{let index=parentIndexes[parentIndexes.length-1];return this.getStartLineNumber(index)<=startLineNumber&&this.getEndLineNumber(index)>=endLineNumber};for(let i=0,len=this._startIndexes.length;i<len;i++){let startLineNumber=this._startIndexes[i],endLineNumber=this._endIndexes[i];if(startLineNumber>16777215||endLineNumber>16777215)throw new Error("startLineNumber or endLineNumber must not exceed 16777215");for(;parentIndexes.length>0&&!isInsideLast(startLineNumber,endLineNumber);)parentIndexes.pop();let parentIndex=parentIndexes.length>0?parentIndexes[parentIndexes.length-1]:-1;parentIndexes.push(i),this._startIndexes[i]=startLineNumber+((255&parentIndex)<<24),this._endIndexes[i]=endLineNumber+((65280&parentIndex)<<16)}}}get length(){return this._startIndexes.length}getStartLineNumber(index){return 16777215&this._startIndexes[index]}getEndLineNumber(index){return 16777215&this._endIndexes[index]}getType(index){return this._types?this._types[index]:void 0}hasTypes(){return!!this._types}isCollapsed(index){let arrayIndex=index/32|0,bit=index%32;return 0!=(this._collapseStates[arrayIndex]&1<<bit)}setCollapsed(index,newState){let arrayIndex=index/32|0,bit=index%32,value=this._collapseStates[arrayIndex];this._collapseStates[arrayIndex]=newState?value|1<<bit:value&~(1<<bit)}setCollapsedAllOfType(type,newState){let hasChanged=!1;if(this._types)for(let i=0;i<this._types.length;i++)this._types[i]===type&&(this.setCollapsed(i,newState),hasChanged=!0);return hasChanged}toRegion(index){return new FoldingRegion(this,index)}getParentIndex(index){this.ensureParentIndices();let parent=((4278190080&this._startIndexes[index])>>>24)+((4278190080&this._endIndexes[index])>>>16);return 65535===parent?-1:parent}contains(index,line){return this.getStartLineNumber(index)<=line&&this.getEndLineNumber(index)>=line}findIndex(line){let low=0,high=this._startIndexes.length;if(0===high)return-1;for(;low<high;){let mid=Math.floor((low+high)/2);line<this.getStartLineNumber(mid)?high=mid:low=mid+1}return low-1}findRange(line){let index=this.findIndex(line);if(index>=0){if(this.getEndLineNumber(index)>=line)return index;for(index=this.getParentIndex(index);-1!==index;){if(this.contains(index,line))return index;index=this.getParentIndex(index)}}return-1}toString(){let res=[];for(let i=0;i<this.length;i++)res[i]=`[${this.isCollapsed(i)?"+":"-"}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;return res.join(", ")}}export class FoldingRegion{constructor(ranges,index){this.ranges=ranges,this.index=index}get startLineNumber(){return this.ranges.getStartLineNumber(this.index)}get endLineNumber(){return this.ranges.getEndLineNumber(this.index)}get regionIndex(){return this.index}get parentIndex(){return this.ranges.getParentIndex(this.index)}get isCollapsed(){return this.ranges.isCollapsed(this.index)}containedBy(range){return range.startLineNumber<=this.startLineNumber&&range.endLineNumber>=this.endLineNumber}containsLine(lineNumber){return this.startLineNumber<=lineNumber&&lineNumber<=this.endLineNumber}}