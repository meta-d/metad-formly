import{URI}from"../../base/common/uri.js";import{Range}from"./core/range.js";import{TokenizationRegistry as TokenizationRegistryImpl}from"./tokenizationRegistry.js";import{Codicon}from"../../base/common/codicons.js";export class TokenMetadata{static getLanguageId(metadata){return(255&metadata)>>>0}static getTokenType(metadata){return(768&metadata)>>>8}static getFontStyle(metadata){return(15360&metadata)>>>10}static getForeground(metadata){return(8372224&metadata)>>>14}static getBackground(metadata){return(4286578688&metadata)>>>23}static getClassNameFromMetadata(metadata){let className="mtk"+this.getForeground(metadata);const fontStyle=this.getFontStyle(metadata);return 1&fontStyle&&(className+=" mtki"),2&fontStyle&&(className+=" mtkb"),4&fontStyle&&(className+=" mtku"),8&fontStyle&&(className+=" mtks"),className}static getInlineStyleFromMetadata(metadata,colorMap){const foreground=this.getForeground(metadata),fontStyle=this.getFontStyle(metadata);let result=`color: ${colorMap[foreground]};`;1&fontStyle&&(result+="font-style: italic;"),2&fontStyle&&(result+="font-weight: bold;");let textDecoration="";return 4&fontStyle&&(textDecoration+=" underline"),8&fontStyle&&(textDecoration+=" line-through"),textDecoration&&(result+=`text-decoration:${textDecoration};`),result}static getPresentationFromMetadata(metadata){const foreground=this.getForeground(metadata),fontStyle=this.getFontStyle(metadata);return{foreground,italic:Boolean(1&fontStyle),bold:Boolean(2&fontStyle),underline:Boolean(4&fontStyle),strikethrough:Boolean(8&fontStyle)}}}export class Token{constructor(offset,type,language){this._tokenBrand=void 0,this.offset=offset,this.type=type,this.language=language}toString(){return"("+this.offset+", "+this.type+")"}}export class TokenizationResult{constructor(tokens,endState){this._tokenizationResultBrand=void 0,this.tokens=tokens,this.endState=endState}}export class EncodedTokenizationResult{constructor(tokens,endState){this._encodedTokenizationResultBrand=void 0,this.tokens=tokens,this.endState=endState}}export var CompletionItemKinds;!function(CompletionItemKinds){const byKind=new Map;byKind.set(0,Codicon.symbolMethod),byKind.set(1,Codicon.symbolFunction),byKind.set(2,Codicon.symbolConstructor),byKind.set(3,Codicon.symbolField),byKind.set(4,Codicon.symbolVariable),byKind.set(5,Codicon.symbolClass),byKind.set(6,Codicon.symbolStruct),byKind.set(7,Codicon.symbolInterface),byKind.set(8,Codicon.symbolModule),byKind.set(9,Codicon.symbolProperty),byKind.set(10,Codicon.symbolEvent),byKind.set(11,Codicon.symbolOperator),byKind.set(12,Codicon.symbolUnit),byKind.set(13,Codicon.symbolValue),byKind.set(15,Codicon.symbolEnum),byKind.set(14,Codicon.symbolConstant),byKind.set(15,Codicon.symbolEnum),byKind.set(16,Codicon.symbolEnumMember),byKind.set(17,Codicon.symbolKeyword),byKind.set(27,Codicon.symbolSnippet),byKind.set(18,Codicon.symbolText),byKind.set(19,Codicon.symbolColor),byKind.set(20,Codicon.symbolFile),byKind.set(21,Codicon.symbolReference),byKind.set(22,Codicon.symbolCustomColor),byKind.set(23,Codicon.symbolFolder),byKind.set(24,Codicon.symbolTypeParameter),byKind.set(25,Codicon.account),byKind.set(26,Codicon.issues),CompletionItemKinds.toIcon=function toIcon(kind){let codicon=byKind.get(kind);return codicon||(console.info("No codicon found for CompletionItemKind "+kind),codicon=Codicon.symbolProperty),codicon};const data=new Map;data.set("method",0),data.set("function",1),data.set("constructor",2),data.set("field",3),data.set("variable",4),data.set("class",5),data.set("struct",6),data.set("interface",7),data.set("module",8),data.set("property",9),data.set("event",10),data.set("operator",11),data.set("unit",12),data.set("value",13),data.set("constant",14),data.set("enum",15),data.set("enum-member",16),data.set("enumMember",16),data.set("keyword",17),data.set("snippet",27),data.set("text",18),data.set("color",19),data.set("file",20),data.set("reference",21),data.set("customcolor",22),data.set("folder",23),data.set("type-parameter",24),data.set("typeParameter",24),data.set("account",25),data.set("issue",26),CompletionItemKinds.fromString=function fromString(value,strict){let res=data.get(value);return void 0!==res||strict||(res=9),res}}(CompletionItemKinds||(CompletionItemKinds={}));export var InlineCompletionTriggerKind;!function(InlineCompletionTriggerKind){InlineCompletionTriggerKind[InlineCompletionTriggerKind.Automatic=0]="Automatic",InlineCompletionTriggerKind[InlineCompletionTriggerKind.Explicit=1]="Explicit"}(InlineCompletionTriggerKind||(InlineCompletionTriggerKind={}));export var SignatureHelpTriggerKind;!function(SignatureHelpTriggerKind){SignatureHelpTriggerKind[SignatureHelpTriggerKind.Invoke=1]="Invoke",SignatureHelpTriggerKind[SignatureHelpTriggerKind.TriggerCharacter=2]="TriggerCharacter",SignatureHelpTriggerKind[SignatureHelpTriggerKind.ContentChange=3]="ContentChange"}(SignatureHelpTriggerKind||(SignatureHelpTriggerKind={}));export var DocumentHighlightKind;!function(DocumentHighlightKind){DocumentHighlightKind[DocumentHighlightKind.Text=0]="Text",DocumentHighlightKind[DocumentHighlightKind.Read=1]="Read",DocumentHighlightKind[DocumentHighlightKind.Write=2]="Write"}(DocumentHighlightKind||(DocumentHighlightKind={}));export function isLocationLink(thing){return thing&&URI.isUri(thing.uri)&&Range.isIRange(thing.range)&&(Range.isIRange(thing.originSelectionRange)||Range.isIRange(thing.targetSelectionRange))}export var SymbolKinds;!function(SymbolKinds){const byKind=new Map;byKind.set(0,Codicon.symbolFile),byKind.set(1,Codicon.symbolModule),byKind.set(2,Codicon.symbolNamespace),byKind.set(3,Codicon.symbolPackage),byKind.set(4,Codicon.symbolClass),byKind.set(5,Codicon.symbolMethod),byKind.set(6,Codicon.symbolProperty),byKind.set(7,Codicon.symbolField),byKind.set(8,Codicon.symbolConstructor),byKind.set(9,Codicon.symbolEnum),byKind.set(10,Codicon.symbolInterface),byKind.set(11,Codicon.symbolFunction),byKind.set(12,Codicon.symbolVariable),byKind.set(13,Codicon.symbolConstant),byKind.set(14,Codicon.symbolString),byKind.set(15,Codicon.symbolNumber),byKind.set(16,Codicon.symbolBoolean),byKind.set(17,Codicon.symbolArray),byKind.set(18,Codicon.symbolObject),byKind.set(19,Codicon.symbolKey),byKind.set(20,Codicon.symbolNull),byKind.set(21,Codicon.symbolEnumMember),byKind.set(22,Codicon.symbolStruct),byKind.set(23,Codicon.symbolEvent),byKind.set(24,Codicon.symbolOperator),byKind.set(25,Codicon.symbolTypeParameter),SymbolKinds.toIcon=function toIcon(kind){let icon=byKind.get(kind);return icon||(console.info("No codicon found for SymbolKind "+kind),icon=Codicon.symbolProperty),icon}}(SymbolKinds||(SymbolKinds={}));export class FoldingRangeKind{constructor(value){this.value=value}}FoldingRangeKind.Comment=new FoldingRangeKind("comment"),FoldingRangeKind.Imports=new FoldingRangeKind("imports"),FoldingRangeKind.Region=new FoldingRangeKind("region");export var Command;!function(Command){Command.is=function is(obj){return!(!obj||"object"!=typeof obj)&&("string"==typeof obj.id&&"string"==typeof obj.title)}}(Command||(Command={}));export var InlayHintKind;!function(InlayHintKind){InlayHintKind[InlayHintKind.Type=1]="Type",InlayHintKind[InlayHintKind.Parameter=2]="Parameter"}(InlayHintKind||(InlayHintKind={}));export const TokenizationRegistry=new TokenizationRegistryImpl;