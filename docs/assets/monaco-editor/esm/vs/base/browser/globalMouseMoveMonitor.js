import*as dom from"./dom.js";import{IframeUtils}from"./iframe.js";import{StandardMouseEvent}from"./mouseEvent.js";import{DisposableStore}from"../common/lifecycle.js";import{isIOS}from"../common/platform.js";export function standardMouseMoveMerger(lastEvent,currentEvent){let ev=new StandardMouseEvent(currentEvent);return ev.preventDefault(),{leftButton:ev.leftButton,buttons:ev.buttons,posx:ev.posx,posy:ev.posy}}export class GlobalMouseMoveMonitor{constructor(){this._hooks=new DisposableStore,this._mouseMoveEventMerger=null,this._mouseMoveCallback=null,this._onStopCallback=null}dispose(){this.stopMonitoring(!1),this._hooks.dispose()}stopMonitoring(invokeStopCallback,browserEvent){if(!this.isMonitoring())return;this._hooks.clear(),this._mouseMoveEventMerger=null,this._mouseMoveCallback=null;const onStopCallback=this._onStopCallback;this._onStopCallback=null,invokeStopCallback&&onStopCallback&&onStopCallback(browserEvent)}isMonitoring(){return!!this._mouseMoveEventMerger}startMonitoring(initialElement,initialButtons,mouseMoveEventMerger,mouseMoveCallback,onStopCallback){if(this.isMonitoring())return;this._mouseMoveEventMerger=mouseMoveEventMerger,this._mouseMoveCallback=mouseMoveCallback,this._onStopCallback=onStopCallback;const windowChain=IframeUtils.getSameOriginWindowChain(),mouseMove=isIOS?"pointermove":"mousemove",listenTo=windowChain.map((element=>element.window.document)),shadowRoot=dom.getShadowRoot(initialElement);shadowRoot&&listenTo.unshift(shadowRoot);for(const element of listenTo)this._hooks.add(dom.addDisposableThrottledListener(element,mouseMove,(data=>{data.buttons===initialButtons?this._mouseMoveCallback(data):this.stopMonitoring(!0)}),((lastEvent,currentEvent)=>this._mouseMoveEventMerger(lastEvent,currentEvent)))),this._hooks.add(dom.addDisposableListener(element,"mouseup",(e=>this.stopMonitoring(!0))));if(IframeUtils.hasDifferentOriginAncestor()){let lastSameOriginAncestor=windowChain[windowChain.length-1];this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document,"mouseout",(browserEvent=>{"html"===new StandardMouseEvent(browserEvent).target.tagName.toLowerCase()&&this.stopMonitoring(!0)}))),this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document,"mouseover",(browserEvent=>{"html"===new StandardMouseEvent(browserEvent).target.tagName.toLowerCase()&&this.stopMonitoring(!0)}))),this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document.body,"mouseleave",(browserEvent=>{this.stopMonitoring(!0)})))}}}